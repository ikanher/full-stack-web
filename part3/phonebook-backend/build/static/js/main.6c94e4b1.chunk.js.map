{"version":3,"sources":["components/Phonebook.js","services/persons.js","App.js","index.js"],"names":["Notification","_ref","message","msg","style","padding","backgroundColor","color","marginBottom","react_default","a","createElement","Filter","_ref3","filter","handleFilterChange","Fragment","type","value","onChange","PersonForm","_ref4","newName","handleNameChange","newNumber","handleNumberChange","handleAddPerson","onSubmit","Persons","_ref5","entries","handleDeleteClick","rows","e","name","toLowerCase","includes","map","Phonebook_Person","key","entry","Person","_ref6","number","_ref7","id","onClick","Phonebook","_ref2","persons","notification","Phonebook_Notification","Phonebook_Filter","Phonebook_PersonForm","Phonebook_Persons","baseURL","services_persons","axios","get","then","response","data","post","put","concat","delete","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setFilter","_useState9","_useState10","setNotification","useEffect","personService","components_Phonebook","event","preventDefault","existing","p","length","person","window","confirm","newPersons","setTimeout","catch","error","target","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.6c94e4b1.chunk.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Notification = ({ message }) => {\n    if (!message.msg) {\n        return null\n    }\n    const style = {\n        'padding': '20px',\n        'backgroundColor': message.color,\n        'color': 'white',\n        'marginBottom': '15px'\n    }\n\n    return (\n        <div style={style}>\n            {message.msg}\n        </div>\n    )\n}\n\nNotification.propTypes = {\n    message: PropTypes.string,\n}\n\nconst Phonebook = ({\n    persons, handleAddPerson,\n    newName, handleNameChange,\n    newNumber, handleNumberChange,\n    filter, handleFilterChange,\n    handleDeleteClick,\n    notification\n}) => {\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification message={notification} />\n            <Filter filter={filter} handleFilterChange={handleFilterChange} />\n            <PersonForm\n                newName={newName} handleNameChange={handleNameChange}\n                newNumber={newNumber} handleNumberChange={handleNumberChange}\n                handleAddPerson={handleAddPerson}\n            />\n            <Persons entries={persons} filter={filter} handleDeleteClick={handleDeleteClick} />\n        </div>\n    )\n}\n\nPhonebook.propTypes = {\n    persons: PropTypes.array,\n    newName: PropTypes.string,\n    newNumber: PropTypes.string,\n    filter: PropTypes.string,\n    notification: PropTypes.string,\n    handleAddPerson: PropTypes.func,\n    handleNameChange: PropTypes.func,\n    handleNumberChange: PropTypes.func,\n    handleFilterChange: PropTypes.func,\n    handleDeleteClick: PropTypes.func,\n}\n\nconst Filter = ({ filter, handleFilterChange }) => {\n    return (\n        <>\n            Filter shown with\n            <input type='text' value={filter} onChange={handleFilterChange} />\n        </>\n    )\n}\n\nFilter.propTypes = {\n    filter: PropTypes.string,\n    handleFilterChange: PropTypes.func,\n}\n\nconst PersonForm = ({\n    newName, handleNameChange,\n    newNumber, handleNumberChange,\n    handleAddPerson,\n}) => {\n\n    return (\n        <form onSubmit={handleAddPerson}>\n            <div>\n            name: <input value={newName} onChange={handleNameChange} />\n                <br />\n            number: <input value={newNumber} onChange={handleNumberChange} />\n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nPersonForm.propTypes = {\n    newName: PropTypes.string,\n    newNumber: PropTypes.string,\n    handleNameChange: PropTypes.func,\n    handleNumberChange: PropTypes.func,\n    handleAddPerson: PropTypes.func,\n}\n\nconst Persons = ({ entries, filter, handleDeleteClick }) => {\n    const rows = entries\n        .filter(e => e.name.toLowerCase().includes(filter.toLowerCase()))\n        .map(e => <Person key={e.name} entry={e} handleDeleteClick={handleDeleteClick} />)\n\n    return (\n        <>\n            <h2>Persons</h2>\n            {rows}\n        </>\n    )\n}\n\nPersons.propTypes = {\n    entries: PropTypes.array,\n    filter: PropTypes.string,\n    handleDeleteClick: PropTypes.func,\n}\n\nconst Person = ({ entry, handleDeleteClick }) => {\n    const DeleteButton = ({ entry }) => {\n        return <button value={entry.id} onClick={handleDeleteClick}>Delete</button>\n    }\n\n    return (\n        <p>{entry.name} {entry.number} <DeleteButton entry={entry} /> </p>\n    )\n}\n\nPerson.propTypes = {\n    entry: PropTypes.object,\n    handleDeleteClick: PropTypes.func,\n}\n\nexport default Phonebook\n","import axios from 'axios'\n\nconst baseURL = '/api/persons'\n\nconst getAll = () => axios.get(baseURL).then(response => response.data)\nconst create = (entry) => axios.post(baseURL, entry).then(response => response.data)\nconst update = (entry) => axios.put(`${baseURL}/${entry.id}`, entry).then(response => response.data)\nconst remove = (id) => axios.delete(`${baseURL}/${id}`)\nconst get = (id) => axios.get(`${baseURL}/${id}`).then(response => response.data)\n\nexport default { getAll, create, update, remove, get }\n","import React, { useState, useEffect } from 'react'\n\nimport Phonebook from './components/Phonebook.js'\nimport personService from './services/persons.js'\n\nconst App = () => {\n    const notificationTimeout = 2000\n    const [ persons, setPersons] = useState([])\n    const [ newName, setNewName ] = useState('')\n    const [ newNumber, setNewNumber ] = useState('')\n    const [ filter, setFilter ] = useState('')\n    const [ notification, setNotification ] = useState({})\n\n    const handleFilterChange = (event) => setFilter(event.target.value)\n    const handleAddPerson = (event) => {\n        event.preventDefault()\n\n        const existing = persons.filter(p => p.name.toLowerCase() === newName.toLowerCase())\n        if (existing.length > 0) {\n\n            // exists, get id of the object\n            const id = existing[0].id\n\n            personService.get(id).then(person => {\n                const msg = `${person.name} exists. Update?`\n                if (window.confirm(msg)) {\n                    // update the number\n                    person.number = newNumber\n                    personService.update(person).then(() => {\n                        const newPersons = persons.filter(p => p.id !== id).concat(person)\n                        setPersons(newPersons)\n                        setNotification({ msg: `Number updated for ${person.name}!`, color: 'green' })\n                        setTimeout(() => setNotification({}), notificationTimeout)\n                    })\n                }\n            }).catch(() => {\n                const msg = `${newName} has already been removed from server...`\n                setNotification({ msg: msg, color: 'red' })\n                setTimeout(() => setNotification({}), notificationTimeout)\n                const newPersons = persons.filter(p => p.id !== id)\n                setPersons(newPersons)\n            })\n        } else {\n            // does not exist, create\n            const entry = { name: newName, number: newNumber }\n            personService.create(entry).then(person => {\n                setPersons(persons.concat(person))\n                setNotification({ msg: `${person.name} added!`, color: 'green' })\n                setTimeout(() => setNotification({}), notificationTimeout)\n            }).catch(error => {\n                setNotification({ msg: error.response.data.error, color: 'red' })\n                setTimeout(() => setNotification({}), notificationTimeout)\n            })\n        }\n\n        setNewName('')\n        setNewNumber('')\n    }\n\n    const handleNameChange = (event) => setNewName(event.target.value)\n    const handleNumberChange = (event) => setNewNumber(event.target.value)\n\n    useEffect(() => {\n        personService.getAll().then(persons => setPersons(persons) )\n    }, [])\n\n    const handleDeleteClick = (event) => {\n        const id = event.target.value\n        personService.get(id).then(person => {\n            if (window.confirm(`Delete ${person.name}?`)) {\n                personService.remove(id).then(() => {\n                    const newPersons = persons.filter(p => p.id !== id)\n                    setPersons(newPersons)\n                })\n            }\n        })\n    }\n\n    return <Phonebook\n        persons={persons}\n        handleAddPerson={handleAddPerson}\n        newName={newName}\n        handleNameChange={handleNameChange}\n        newNumber={newNumber}\n        handleNumberChange={handleNumberChange}\n        filter={filter}\n        handleFilterChange={handleFilterChange}\n        handleDeleteClick={handleDeleteClick}\n        notification={notification}\n    />\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}